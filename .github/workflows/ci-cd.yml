name: Build and Deploy

on:
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Check out repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up QEMU for multi-platform Docker builds (e.g., for ARM64 servers)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Set up Docker Buildx, the builder engine
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Log in to the GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Generate metadata for Docker, such as tags and labels
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      # 6. Build and push the Docker image
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 7. Trigger deployment on Coolify
      - name: Trigger Coolify Deployment
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Triggering deployment webhook..."
          curl -X POST "${{ secrets.COOLIFY_DEPLOY_WEBHOOK }}"
          echo "Deployment triggered."
